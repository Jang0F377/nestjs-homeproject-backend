version: '3.4'
services:
  vf-server:
    container_name: vf-server
    image: vf-server:latest
    depends_on: [mongodb]
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: node dist/main
    ports:
      - 80:80
    networks:
      - server-network
    restart: always

  mongo-express:
    image: mongo-express
    container_name: server-mongo-express
    depends_on: [mongodb]
    environment:
      ME_CONFIG_MONGODB_URL: 'mongodb://root:pass1234@server-mongodb:27017'
      ME_CONFIG_MONGODB_SERVER: '${MONGO_HOST}'
      ME_CONFIG_MONGODB_ADMINUSERNAME: '${MONGO_USERNAME}'
      ME_CONFIG_MONGODB_ADMINPASSWORD: '${MONGO_PASSWORD}'
      ME_CONFIG_BASICAUTH_USERNAME: '${MONGO_EXPRESS_USERNAME}'
      ME_CONFIG_BASICAUTH_PASSWORD: '${MONGO_EXPRESS_PASSWORD}'
    networks:
      - server-network
    ports:
      - 8081:8081
    restart: always

  mongodb:
    image: mongo
    container_name: server-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodb-data1:/data/db
      - ./scripts/mongo_setup.sh:/scripts/mongo_setup.sh
    networks:
      - server-network
    ports:
      - 30001:27017
    restart: always
    depends_on: [mongodb2, mongodb3]

  mongodb2:
    image: mongo
    container_name: server-mongodb2
    volumes:
      - mongodb-data2:/data/db
    networks:
      - server-network
    ports:
      - 30002:27017
    restart: unless-stopped

  mongodb3:
    image: mongo
    container_name: server-mongodb3
    volumes:
      - mongodb-data3:/data/db
    networks:
      - server-network
    ports:
      - 30003:27017
    restart: unless-stopped
volumes:
  mongodb-data1:
  mongodb-data2:
  mongodb-data3:
networks:
  server-network:
